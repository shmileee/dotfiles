{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Dotfiles","text":"<p>Welcome! This is the documentation for my dotfiles repository.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>The preferred method of installation is to do a fresh install of macOS or Debian based Linux, then run the automated setup script:</p> <pre><code>curl -fsSL oponomarov.com/d | sh -s -- --all\n</code></pre> <p>Info</p> <p>You can see the repository in action by running <code>docker run -it shmileee/dotfiles</code> and spawning a prebuilt docker container with interactive tty. The size is almost 4GB.</p> <p>To learn about the rationale behind my setup, how to use it, what features are available and how to tweak the configurations to suit your tastes, please read the Usage Guide section.</p>"},{"location":"#highlights","title":"Highlights","text":"<ul> <li>Sane macOS defaults</li> <li>Fast and colored prompt</li> <li>Well-organized and easy to customize</li> <li>Minimal efforts to install everything</li> <li>Mostly based around Ansible, Homebrew and Chezmoi</li> <li>Single responsibility principle - one tool manages one thing</li> <li>The installation and setup is   tested weekly on:<ul> <li>real Ubuntu + macOS machines</li> <li>Ubuntu 20.04 Docker container</li> </ul> </li> <li>Supports both Apple Silicon (M1) and Intel chips</li> </ul>"},{"location":"features/1-UsageGuide/","title":"Usage Guide","text":"<p>In this section you will find write-ups on most used tools, programs, and custom scripts. Refer to each individual page for more details. </p>"},{"location":"features/1-UsageGuide/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Rationale</li> <li>Tools</li> <li>Installation</li> <li>Hotkeys</li> <li>Troubleshooting</li> </ul>"},{"location":"features/Hotkeys/","title":"Hotkeys","text":"<p>All \"system-wide\" keyboard shortcuts for macOS are bound using builtin functionality. The shortcuts are set in <code>config.yaml</code> as a <code>darwin_hotkeys</code> map that has the following structure:</p> <ul> <li><code>&lt;system keycode&gt;</code>:<ul> <li>parameters: <code>&lt;keyboard keys in ascii&gt;</code></li> <li>enabled: <code>&lt;boolean that indicates whether shortcut is enabled&gt;</code></li> </ul> </li> </ul> <p>Where <code>&lt;system keycode&gt;</code> is the <code>int</code> UID for the feature in System Preferences - Keyboard - Shortcuts, e.g.: \"Show Spotlight search\" corresponds to <code>64</code>.</p>"},{"location":"features/Hotkeys/#key-bindings","title":"Key Bindings","text":"<p>The following keybindings are available: </p> Key Combination Action Cmd+G Show Spotlight search. Cmd+Space Select the next source in input menu. <p>Note</p> <p><code>community.general.osx_defaults</code> Ansible collection does not support modifying system shortcuts yet. This is why I use <code>ansible.builtin.command</code> to accomplish the desired result, which is not idempotent.</p>"},{"location":"features/Hotkeys/#read-more","title":"Read More","text":"<ul> <li>What do the parameter values in <code>AppleSymbolicHotKeys</code> plist dict   represent?</li> </ul>"},{"location":"features/Installation/","title":"Installation","text":""},{"location":"features/Installation/#requirements","title":"Requirements","text":"<p>Operating System</p> <p>This Ansible playbook only supports macOS and Debian-based Linux distributions. This is by design to provide a consistent development experience across machines.</p>"},{"location":"features/Installation/#macos","title":"macOS","text":"<p>On a sparkling fresh installation of macOS:</p> <pre><code>sudo softwareupdate -i -a\nxcode-select --install\n</code></pre> <p>The Xcode Command Line Tools includes <code>git</code> and <code>make</code> (not available on stock macOS).</p> <p>Warning</p> <p>If your machine has already homebrew preinstalled, - make sure you have the full ownership over directories managed by <code>brew</code>. See this issue for more information.</p>"},{"location":"features/Installation/#running-setupsh","title":"Running <code>setup.sh</code>","text":"<p>Bootstrap the installation procedure by running <code>setup.sh</code>. The script solves chicken or the egg problem by installing essential dependencies to run Ansible playbook.</p> <p>The script can be run directly with single <code>curl</code> command if you like living on the edge:</p> <pre><code>curl -fsSL oponomarov.com/d | sh -s -- --all\n</code></pre> <p>Otherwise, just download the file somewhere, review its content and execute with <code>--all</code> flag:</p> <pre><code>curl -fsSL https://raw.githubusercontent.com/shmileee/dotfiles/master/scripts/setup.sh &gt; setup.sh\nchmod +x setup.sh\n./setup.sh --all\n</code></pre> <p>The script will:</p> <ul> <li>Download <code>github.com/shmileee/dotfiles</code> into <code>/tmp/.dotfiles</code> using any of   the tools available (<code>git</code>, <code>curl</code>, <code>wget</code>)</li> <li>Install   <code>essential</code>   system dependencies if running on Linux</li> <li>Install Ansible (if running on Linux, this is part of the previous step,   otherwise it is installed via <code>brew</code> in the step)</li> <li>Attempt to install homebrew (if it does not exist yet)</li> <li> <p>Execute   <code>ansible.sh</code>,   which in turn will:</p> </li> <li> <p>Install <code>community.general</code> Ansible collection</p> </li> <li>Check if passwordless <code>sudo</code> is available (if no, - the script will prompt you for     password)</li> <li>Execute     <code>main.yaml</code>     playbook</li> </ul>"},{"location":"features/Installation/#ansible","title":"Ansible","text":"<p>The following playbook is the main entrypoint for configuring the actual system and dotfiles.</p> <p>The <code>config.yaml</code> file allows you to personalize the setup to your needs. At most it contains a list of packages and their versions (in case of tools managed by <code>mise</code>) to install.</p> <p>The <code>dotfiles:</code> dictionary defines from which repository and branch chezmoi shall install the dotfiles to the system. If you tend to reuse this playbook, make sure to adjust the variable accordingly.</p> <p>Warning</p> <p>Certain Ansible tasks expect specific dotfiles to be in place, e.g. <code>install tmux     plugins</code> will fail if <code>tmux.conf</code> is missing or does not include <code>run '~/.tmux/plugins/tpm/tpm'</code> line.</p> <p>Supported Ansible roles:</p> <ul> <li><code>common</code> - Install basic system dependencies for Debian-based distribution   using <code>apt</code> package manager if cannot be installed otherwise. Install common   packages using homebrew. Install homebrew casks for macOS.</li> <li><code>fonts</code> - Install fonts with homebrew. This might change in the future between   platforms.</li> <li><code>dotfiles</code> - Install chezmoi using homebrew. Initiate dotfiles repository and   update files.</li> <li><code>fish</code> - Install fish using homebrew. Set default user's shell to fish. Configure fisher and install plugins.</li> <li><code>neovim</code> - Install neovim. If <code>neovim.build_from_source</code> is set to <code>true</code>, -   neovim will be compiled. Otherwise, download nightly deb package from   GitHub. On macOS neovim is installed using HEAD revision via brew.</li> <li><code>lunarvim</code> - Install LunarVim and reapply chezmoi to populate <code>config.lua</code></li> <li><code>mise</code> - Install mise version manager for typical packages that need more   granular control over. All tools and their respective versions are defined in   <code>config.yaml</code>.</li> <li><code>docker</code> - Install docker using brew.</li> <li><code>tmux</code> - Install tmux, tpm and plugins defined in <code>tmux.conf</code></li> <li><code>system_defaults</code> - Install sane macOS system settings. It will also configure   custom tweaks for applications like rectangle or alt-tab. Use this with   caution as the settings are very opinionated and might break your existing   setup. This role is also the subject for future changes - more things like   custom keybinding will be introduced shortly.</li> </ul>"},{"location":"features/Installation/#installation-flow","title":"Installation Flow","text":"<pre><code>   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250c\u2500\u2500\u2524curl -fsSL oponomarov.com/d | sh -s -- --all\u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502\n\u2502\n\u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u251c\u2500\u2500\u2500\u25ba \u2502git clone shmileee/dotfiles.git /tmp \u2502\n\u2502     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502\n\u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u251c\u2500\u2500\u2500\u25ba \u2502./install_dependencies.sh\u251c\u2500\u2500\u2500\u2500\u25ba\u2502 apt install &lt;essentials&gt; \u2502\n\u2502     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502\n\u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u251c\u2500\u2500\u2500\u25ba \u2502./install_brew.sh \u2502\n\u2502     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502\n\u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2514\u2500\u2500\u2500\u25ba \u2502./ansible.sh\u2502\n      \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n            \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n   \u2502\n   \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u251c\u2500\u25ba\u2502install community.general\u2502\n   \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n   \u2502\n   \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502  \u2502 prompt for password if   \u2502\n   \u251c\u2500\u25ba\u2502 sudo is not passwordless \u2502\n   \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n   \u2502\n   \u2502\n   \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2514\u2500\u25ba\u2502ansible-playbook ... main.yaml \u2502\n      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                      \u2502\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u2502 brew install &lt;packages&gt;\u2502\n     \u251c\u2500\u25ba\u2502common\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 brew install &lt;casks&gt;   \u2502\n     \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u251c\u2500\u25ba\u2502 fonts \u2502\n     \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502 chezmoi init  \u2502\n     \u251c\u2500\u25ba\u2502 dotfiles \u251c\u2500\u2500\u25ba\u2502 chezmoi update\u2502\n     \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502\n     \u2502\n     \u2502\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u251c\u2500\u25ba\u2502fish\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502change default shell\u2502\n     \u2502  \u2514\u2500\u2500\u2500\u2500\u2518       \u2514\u25ba\u2502install fisher      \u2502\n     \u2502                 \u2502install fish plugins\u2502\n     \u2502                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502\n     \u2502\n     \u2502                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u2502 either:              \u2502\n     \u251c\u2500\u25ba\u2502neovim\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502  - build from source \u2502\n     \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2502  - install binary    \u2502\n     \u2502                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502\n     \u2502\n     \u2502                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u2502 download                  \u2502\n     \u251c\u2500\u25ba\u2502lunarvim\u251c\u2500\u2500\u2500\u2500\u25ba\u2502 install                   \u2502\n     \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2502 update config with chezmoi\u2502\n     \u2502                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502\n     \u2502\n     \u2502                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2510         \u2502 install plugins    \u2502\n     \u251c\u2500\u25ba\u2502mise\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 install tools      \u2502\n     \u2502  \u2514\u2500\u2500\u2500\u2500\u2518         \u2502 set global versions\u2502\n     \u2502                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u251c\u2500\u25ba\u2502 go \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 install go packages\u2502\n     \u2502  \u2514\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u251c\u2500\u25ba\u2502 docker \u2502\n     \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502                 \u2502install plugin manager\u2502\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u25ba\u2502install plugins       \u2502\n     \u251c\u2500\u25ba\u2502 tmux \u251c\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2514\u2500\u25ba\u2502 system_defaults \u2502\n        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2502          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 defaults write &lt;apps settings&gt;\u2502\n                \u2502          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2502\n                \u2502          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502reorder apps in dock\u2502\n                \u2502          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2502\n                \u2502          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502set custom keybindings\u2502\n                \u2502          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2502\n                \u2502          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502defaults write &lt;system&gt;\u2502\n                           \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"features/Rationale/","title":"Rationale","text":""},{"location":"features/Rationale/#goal","title":"Goal","text":"<p>Provide fully automated development environment that is easy to setup and maintain.</p>"},{"location":"features/Rationale/#why-ansible","title":"Why Ansible?","text":"<p>In my experience Ansible has the easiest learning curve. It has its own caveats and gotchas, but overall it's pretty straightforward to read YAML configuration for a person that knows very little about how Ansible works. It's almost like reading plain English with very rare exceptions. Additionally, Ansible is a Swiss army knife orchestration tool. You can use it and abuse it in many different ways which might or might not be supported via other popular solution like NixOS Home Manager otherwise. One of the biggest advantages of Ansible is that (if properly described) tasks follow idempotency principle, which means playbook can be run over and over again without having to worry about your precious files accidentally being removed.</p> <p>All in all - there are many automation solutions out there - I happen to enjoy using Ansible.</p>"},{"location":"features/Rationale/#why-chezmoi","title":"Why Chezmoi?","text":"<p>Chezmoi is another tool for managing dotfiles. It seems to be the most popular choice these days with over 6k+ stars. Prior to switch, I've used GNU Stow which had it's job done but unfortunately lacked a couple of features chezmoi tends to resolve. The most important features of chezmoi:</p> <ul> <li>Flexible: dotfiles can be templates (using text/template syntax). While this   can be achieved using Ansible builtin Jinja templates, - chezmoi provides a   set of variables that can be used inside the template for simple assertions   like the platform you're currently running on, architecture, hostname,   environmental variables lookup and many more. Additionally, testing Jinja   templates in Ansible is very cumbersome. With chezmoi this is as simple as   running <code>chezmoi execute-template &lt; file.tmpl</code>.</li> <li>Portable: chezmoi's configuration uses only visible, regular files and   directories and so is portable across version control systems and operating   systems.</li> <li>Transparent: chezmoi includes verbose and dry run modes so you can review   exactly what changes it will make to your home directory before making them.</li> <li>Practical: chezmoi manages hidden files (dot files), directories, private, and   executable files.</li> <li>Fast, easy to use, and familiar: chezmoi runs in fractions of a second and   includes commands to make most operations trivial.</li> </ul> <p>The biggest driver for choosing chezmoi was my intention to follow single responsibility principle: dotfiles should be managed separately.</p>"},{"location":"features/Rationale/#why-lunarvim","title":"Why LunarVim?","text":"<p>I used regular Vim for a couple of years until it has become really painful to manage a 500+ lines file. I've made an attempt to switch to Neovim after watching Vimconf hosted by ThePrimagen and TJ DeVries. This switch made me realize I don't understand half of the Lua configuration.</p> <p>Luckily, it turned out that most of the keymaps, plugins and sane defaults I was trying to configure are not necessarily specific and lots of people tend to configure Neovim this way. In fact, LunarVim does this pretty well by providing a community driven framework for Neovim that acts like a wrapper with a bunch of common plugins. I happen to enjoy most of the stuff they ship out of the box. As an experienced Vim user, I found I only needed to install a couple more plugins to feel comfortable, rebind a couple of keys and configure less than 10 options.</p>"},{"location":"features/Rationale/#why-fish","title":"Why Fish?","text":"<p>Fish ecosystem is great for interactive shells. I still write day-to-day scripts in pure bash, but the amount of features that comes preconfigured with fish is just too good to resist.</p> <p>Warning</p> <p>Fish is not POSIX compatible shell.</p>"},{"location":"features/Tools/","title":"Tools","text":"<p>Here's a non-exhaustive list of everything I used in my personal dotfiles.</p> <ul> <li>Chezmoi as dotfiles manager.</li> </ul> <p>Editor</p> <ul> <li>Neovim as primary editor on the command line.</li> <li>LunarVim as primary neovim distribution     (<code>config.lua</code>).</li> </ul> <p>Shell</p> <ul> <li>Fish Shell as primary shell (<code>~/.config/fish</code>).</li> <li>Fisher as plugin manager     (<code>fish_plugins</code>).</li> <li>Tmux as terminal multiplexer (<code>tmux.conf</code>).</li> <li>Tmux Plugin Manager as plugin manager.</li> </ul> <p>Packages</p> <ul> <li>homebrew as primary package manager (casks +   formulas).</li> <li>mise as version manager for various system tools.</li> </ul> <p>Apps</p> <ul> <li>Alacritty as terminal emulator (<code>alacritty.toml</code>).</li> <li>Brave as primary web browser.</li> <li>Rectangle as windows manager.</li> <li>Fzf as command-line fuzzy finder.</li> </ul>"}]}