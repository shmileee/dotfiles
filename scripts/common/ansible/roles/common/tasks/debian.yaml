---

- name: "packages | read in apt packages from file"
  ansible.builtin.set_fact:
    apt_packages_from_file: "{{ lookup('file', playbook_dir +
      '/../../linux/essentials.apt').splitlines() | reject('search', '#.*') |
      unique }}"

- block:
    - name: "packages | list apt tools"
      ansible.builtin.debug:
        msg: "{{ apt.packages | difference(apt_packages_from_file) }}"

    - name: "packages | install"
      become: true
      ansible.builtin.apt:
        # Ensure packages that have been installed with shell scripts are
        # excluded.
        name: "{{ apt.packages | difference(apt_packages_from_file) }}"
        autoclean: true
        autoremove: true
        update_cache: true
      when: apt.packages

    - name: "packages | upgrade to the latest version"
      become: true
      ansible.builtin.apt:
        upgrade: safe
      changed_when: false

- block:
    - name: "packages | list homebrew tools"
      ansible.builtin.debug:
        msg: "{{ brew.packages | difference(apt_packages_from_file) }}"

    - name: "packages | update homebrew"
      changed_when: false
      community.general.homebrew:
        update_homebrew: true

    - name: "packages | install homebrew tools"
      community.general.homebrew:
        # Ensure packages that have been installed with shell scripts are
        # excluded.
        name: "{{ brew.packages | difference(apt_packages_from_file) }}"
      when: brew.packages

    - name: "packages | install homebrew tools from source"
      community.general.homebrew:
        name: "{{ brew.packages_from_source }}"
        install_options: build-from-source
      when: brew.packages_from_source

  tags: homebrew
